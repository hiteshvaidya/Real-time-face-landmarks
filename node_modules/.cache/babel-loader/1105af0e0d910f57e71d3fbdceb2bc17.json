{"ast":null,"code":"var _jsxFileName = \"/Users/hitesh/Documents/machine learning/facemesh/src/App.js\",\n    _s = $RefreshSig$();\n\n// useRef allows to have reference to canvas and webcam components\nimport React, { useRef, useEffect } from \"react\"; // import logo from './logo.svg';\n\nimport './App.css';\nimport * as tf from \"@tensorflow/tfjs\"; // import model\n\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // setup references\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); // Load model\n\n  const runFacemesh = async () => {\n    // OLD MODEL\n    // const net = await facemesh.load({\n    //   inputResolution: { width: 640, height: 480 },\n    //   scale: 0.8,\n    // });\n    // NEW MODEL\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hitesh/Documents/machine learning/facemesh/src/App.js"],"names":["React","useRef","useEffect","tf","facemesh","Webcam","drawMesh","App","webcamRef","canvasRef","runFacemesh","net","load","SupportedPackages","mediapipeFacemesh","setInterval","detect","position","marginLeft","marginRight","left","right","textAlign","zindex","width","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB,C,CAEA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,6CAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMQ,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB,CAHa,CAKb;;AACE,QAAMS,WAAW,GAAG,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAT,CAAcR,QAAQ,CAACS,iBAAT,CAA2BC,iBAAzC,CAAlB;AACAC,IAAAA,WAAW,CAAC,MAAM;AACdC,MAAAA,MAAM,CAACL,GAAD,CAAN;AACH,KAFU,EAER,EAFQ,CAAX;AAGH,GAXD;;AAaF,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,GAAG,EAAEH,SADT;AAEI,QAAA,KAAK,EAAE;AACHS,UAAAA,QAAQ,EAAE,UADP;AAEHC,UAAAA,UAAU,EAAE,MAFT;AAGHC,UAAAA,WAAW,EAAE,MAHV;AAIHC,UAAAA,IAAI,EAAE,CAJH;AAKHC,UAAAA,KAAK,EAAE,CALJ;AAMHC,UAAAA,SAAS,EAAE,QANR;AAOHC,UAAAA,MAAM,EAAE,CAPL;AAQHC,UAAAA,KAAK,EAAE,GARJ;AASHC,UAAAA,MAAM,EAAE;AATL;AAFX;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AACI,QAAA,GAAG,EAAEhB,SADT;AAEI,QAAA,KAAK,EAAE;AACHQ,UAAAA,QAAQ,EAAE,UADP;AAEHC,UAAAA,UAAU,EAAE,MAFT;AAGHC,UAAAA,WAAW,EAAE,MAHV;AAIHC,UAAAA,IAAI,EAAE,CAJH;AAKHC,UAAAA,KAAK,EAAE,CALJ;AAMHC,UAAAA,SAAS,EAAE,QANR;AAOHC,UAAAA,MAAM,EAAE,CAPL;AAQHC,UAAAA,KAAK,EAAE,GARJ;AASHC,UAAAA,MAAM,EAAE;AATL;AAFX;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCD;;GAtDQlB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["// useRef allows to have reference to canvas and webcam components\nimport React, {useRef, useEffect} from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\nimport * as tf from \"@tensorflow/tfjs\";\n\n// import model\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\n\nfunction App() {\n  // setup references\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Load model\n    const runFacemesh = async () => {\n        // OLD MODEL\n        // const net = await facemesh.load({\n        //   inputResolution: { width: 640, height: 480 },\n        //   scale: 0.8,\n        // });\n        // NEW MODEL\n        const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n        setInterval(() => {\n            detect(net);\n        }, 10);\n    };\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <Webcam\n                ref={webcamRef}\n                style={{\n                    position: \"absolute\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    left: 0,\n                    right: 0,\n                    textAlign: \"center\",\n                    zindex: 9,\n                    width: 640,\n                    height: 480,\n                }}\n            />\n\n            <canvas\n                ref={canvasRef}\n                style={{\n                    position: \"absolute\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    left: 0,\n                    right: 0,\n                    textAlign: \"center\",\n                    zindex: 9,\n                    width: 640,\n                    height: 480,\n                }}\n            />\n        </header>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}